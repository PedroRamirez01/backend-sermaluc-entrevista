version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: sermaluc-postgres
    environment:
      POSTGRES_DB: sermaluc
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    networks:
      - sermaluc-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sermaluc"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: ./backend
      dockerfile: dockerfile
    container_name: sermaluc-backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=password123
      - DB_NAME=sermaluc
      - PORT=8000
      - NODE_ENV=development
      - HOST=0.0.0.0
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - sermaluc-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: npm run start:dev

  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile
    container_name: sermaluc-frontend
    environment:
      - VITE_API_URL=http://localhost:8000/api
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - sermaluc-network
    depends_on:
      backend:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: npm run dev -- --host 0.0.0.0 --port 5173

  adminer:
    image: adminer
    container_name: sermaluc-adminer
    ports:
      - "8080:8080"
    networks:
      - sermaluc-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  sermaluc-network:
    driver: bridge